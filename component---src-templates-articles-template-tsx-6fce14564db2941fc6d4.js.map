{"version":3,"sources":["webpack:///./src/components/Regions/Regions.tsx","webpack:///./src/sections/articles/Articles.Hero.tsx","webpack:///./src/templates/articles.template.tsx"],"names":["Regions","authors","Wrapper","map","a","AuthorLink","color","to","slug","key","name","SightName","ArticlesHero","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","hero","useStaticQuery","site","edges","node","siteMetadata","tilesIsActive","Section","relative","id","HeadingContainer","style","maxWidth","HeroHeading","dangerouslySetInnerHTML","__html","heading","SubheadingContainer","GridControlsContainer","GridButton","onClick","active","data-a11y","title","aria-label","Tiles","Rows","mediaqueries","desktop","tablet","phablet","p","theme","colors","primary","accent","hover","ArticlesGradient","ArticlesPage","location","pageContext","articles","group","additionalContext","Layout","SEO","pathname","narrow","ArticlesPaginator","show","pageCount","gradient","colorModeTransition"],"mappings":"qQAMaA,EAA4C,SAAC,GAAgB,IAAdC,EAAc,EAAdA,QAC1D,OACE,cAACC,EAAD,KACGD,EAAQE,KAAI,SAAAC,GAAC,OACZ,cAACC,EAAD,CAAYC,MAAOF,EAAEE,OACnB,cAAC,OAAD,CAAMC,GAAIH,EAAEI,KAAMC,IAAKL,EAAEM,MACtBN,EAAEM,YAQTR,EAAU,mBAAH,oBAAG,CAAH,2DAKPG,EAAa,YAAOM,IAAP,sBAAH,0L,kvBCbhB,IAwDeC,EAvCwC,SAAC,GAAgB,IAAdX,EAAc,EAAdA,QAAc,EACJY,qBAAWC,KADP,IAC9DC,kBAD8D,MACjD,QADiD,EACxCC,EADwC,EACxCA,iBAAkBC,EADsB,EACtBA,cAG1CC,EADUC,yBApBE,cAqBGC,KAAKC,MAAM,GAAGC,KAAKC,aAAaL,KAC/CM,EAAgBR,GAAmC,UAAfD,EAE1C,OACE,cAACU,EAAA,EAAD,CAASC,UAAQ,EAACC,GAAG,kBACnB,cAACC,EAAD,CAAkBC,MAAO,CAAEC,SAAaZ,EAAKY,SAAV,OACjC,cAACC,EAAD,CAAaC,wBAAyB,CAAEC,OAAQf,EAAKgB,YAEvD,cAACC,EAAD,KACE,cAAC,EAAD,CAASlC,QAASA,IAClB,cAACmC,EAAD,KACE,cAACC,EAAD,CACEC,QAAS,kBAAMrB,EAAc,UAC7BsB,OAAQf,EACRgB,YAAU,QACVC,MAAM,6BACNC,aAAW,8BAEX,cAAC,IAAMC,MAAP,OAEF,cAACN,EAAD,CACEC,QAAS,kBAAMrB,EAAc,SAC7BsB,QAASf,EACTgB,YAAU,QACVC,MAAM,4BACNC,aAAW,6BAEX,cAAC,IAAME,KAAP,WAUNT,EAAsB,mBAAH,mBAAG,CAAH,8DAKrBU,IAAaC,QALQ,SASrBD,IAAaE,OATQ,SAarBF,IAAaG,QAbQ,UAkBnBZ,EAAwB,mBAAH,mBAAG,CAAH,oDAKvBS,IAAaE,OALU,UAUrBnB,EAAmB,mBAAH,mBAAG,CAAH,kBAGlBiB,IAAaC,QAHK,SAOlBD,IAAaE,OAPK,MAYhBhB,EAAc,kBAAH,mBAAG,CAAH,4EAKN,SAAAkB,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,UALd,aAQJ,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,SARhB,KAWbR,IAAaC,QAXA,SAebD,IAAaG,QAfA,MAoBXX,EAAa,sBAAH,mBAAG,CAAH,kOAgBE,SAAAY,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,QAhBtB,+HA0BQ,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,SA1B5B,sEAgCD,SAAAJ,GAAC,OAAKA,EAAEV,OAAS,EAAI,MAhCpB,uCAoCF,SAAAU,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,UApClB,O,YCjGVG,GAFSC,UAnBwB,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC5CC,EAAWD,EAAYE,MACvB3D,EAAUyD,EAAYG,kBAAkB5D,QAE9C,OACE,cAAC6D,EAAA,EAAD,KACE,cAACC,EAAA,EAAD,CAAKC,SAAUP,EAASO,WACxB,cAAC,EAAD,CAAc/D,QAASA,IACvB,cAACwB,EAAA,EAAD,CAASwC,QAAM,GACb,cAAC,IAAD,CAAcN,SAAUA,EAAU1D,QAASA,IAC3C,cAACiE,EAAD,CAAmBC,KAAMT,EAAYU,UAAY,GAC/C,cAAC,IAAcV,KAGnB,cAACH,EAAD,QAOmB,mBAAH,mBAAG,CAAH,uGAQN,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOkB,WARd,gBASN,SAAApB,GAAC,OAAIA,EAAEC,MAAMoB,sBATP,MAYhBJ,EAAoB,mBAAH,mBAAG,EACtB,SAAAjB,GAAC,OAAIA,EAAEkB,MAAF","file":"component---src-templates-articles-template-tsx-6fce14564db2941fc6d4.js","sourcesContent":["import styled from '@emotion/styled';\r\nimport { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport { IAuthor } from '../../types';\r\nimport { SightName } from '../Common/Common';\r\n\r\nexport const Regions: React.FC<{ authors: IAuthor[] }> = ({ authors }) => {\r\n  return (\r\n    <Wrapper>\r\n      {authors.map(a => (\r\n        <AuthorLink color={a.color}>\r\n          <Link to={a.slug} key={a.name}>\r\n            {a.name}\r\n          </Link>\r\n        </AuthorLink>\r\n      ))}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst AuthorLink = styled(SightName)`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  margin-right: 15px;\r\n\r\n  &:not(:first-child):before {\r\n    content: 'Â·';\r\n    color: rgba(8, 8, 11, 0.15);\r\n    vertical-align: text-bottom;\r\n    margin-right: 15px;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport styled from '@emotion/styled';\r\n\r\nimport Section from '../../components/Section';\r\nimport Icons from '../../icons/index';\r\nimport mediaqueries from '../../styles/media';\r\nimport { IAuthor } from '../../types';\r\n\r\nimport { GridLayoutContext } from './Articles.List.Context';\r\nimport { Regions } from '../../components/Regions';\r\n\r\nconst authorQuery = graphql`\r\n  {\r\n    site: allSite {\r\n      edges {\r\n        node {\r\n          siteMetadata {\r\n            hero {\r\n              heading\r\n              maxWidth\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArticlesHero: React.FC<{ authors: IAuthor[] }> = ({ authors }) => {\r\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(GridLayoutContext);\r\n\r\n  const results = useStaticQuery(authorQuery);\r\n  const hero = results.site.edges[0].node.siteMetadata.hero;\r\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\r\n\r\n  return (\r\n    <Section relative id=\"Articles__Hero\">\r\n      <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\r\n        <HeroHeading dangerouslySetInnerHTML={{ __html: hero.heading }} />\r\n      </HeadingContainer>\r\n      <SubheadingContainer>\r\n        <Regions authors={authors} />\r\n        <GridControlsContainer>\r\n          <GridButton\r\n            onClick={() => setGridLayout('tiles')}\r\n            active={tilesIsActive}\r\n            data-a11y=\"false\"\r\n            title=\"Show articles in Tile grid\"\r\n            aria-label=\"Show articles in Tile grid\"\r\n          >\r\n            <Icons.Tiles />\r\n          </GridButton>\r\n          <GridButton\r\n            onClick={() => setGridLayout('rows')}\r\n            active={!tilesIsActive}\r\n            data-a11y=\"false\"\r\n            title=\"Show articles in Row grid\"\r\n            aria-label=\"Show articles in Row grid\"\r\n          >\r\n            <Icons.Rows />\r\n          </GridButton>\r\n        </GridControlsContainer>\r\n      </SubheadingContainer>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default ArticlesHero;\r\n\r\nconst SubheadingContainer = styled.div`\r\n  display: flex;\r\n  align-items: space-between;\r\n  margin-bottom: 100px;\r\n\r\n  ${mediaqueries.desktop`\r\n    margin-bottom: 80px;\r\n  `};\r\n\r\n  ${mediaqueries.tablet`\r\n    margin-bottom: 60px;\r\n  `};\r\n\r\n  ${mediaqueries.phablet`\r\n    display: none;\r\n  `};\r\n`;\r\n\r\nconst GridControlsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: auto;\r\n\r\n  ${mediaqueries.tablet`\r\n    display: none;\r\n  `};\r\n`;\r\n\r\nconst HeadingContainer = styled.div`\r\n  margin: 100px 0;\r\n\r\n  ${mediaqueries.desktop`\r\n    width: 80%;\r\n  `}\r\n\r\n  ${mediaqueries.tablet`\r\n    width: 100%;\r\n  `}\r\n`;\r\n\r\nconst HeroHeading = styled.h1`\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  font-size: 72px;\r\n  line-height: 1.15;\r\n  color: ${p => p.theme.colors.primary};\r\n\r\n  a {\r\n    color: ${p => p.theme.colors.accent};\r\n  }\r\n\r\n  ${mediaqueries.desktop`\r\n    font-size: 38px\r\n  `}\r\n\r\n  ${mediaqueries.phablet`\r\n    font-size: 32px;\r\n  `}\r\n`;\r\n\r\nconst GridButton = styled.button<{ active: boolean }>`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 36px;\r\n  width: 36px;\r\n  border-radius: 50%;\r\n  background: transparent;\r\n  transition: background 0.25s;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 30px;\r\n  }\r\n\r\n  &:hover {\r\n    background: ${p => p.theme.colors.hover};\r\n  }\r\n\r\n  &[data-a11y='true']:focus::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: -10%;\r\n    top: -10%;\r\n    width: 120%;\r\n    height: 120%;\r\n    border: 2px solid ${p => p.theme.colors.accent};\r\n    background: rgba(255, 255, 255, 0.01);\r\n    border-radius: 50%;\r\n  }\r\n\r\n  svg {\r\n    opacity: ${p => (p.active ? 1 : 0.25)};\r\n    transition: opacity 0.2s;\r\n\r\n    path {\r\n      fill: ${p => p.theme.colors.primary};\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Section from \"../components/Section\";\nimport SEO from \"../components/SEO\";\nimport Layout from \"../components/Layout\";\nimport Paginator from \"../components/Navigation/Navigation.Paginator\";\n\nimport ArticlesHero from \"../sections/articles/Articles.Hero\";\nimport ArticlesList from \"../sections/articles/Articles.List\"\nimport { ArticlesTemplate } from \"../types\";\n\nconst ArticlesPage: ArticlesTemplate = ({ location, pageContext }) => {\n  const articles = pageContext.group;\n  const authors = pageContext.additionalContext.authors;\n\n  return (\n    <Layout>\n      <SEO pathname={location.pathname} />\n      <ArticlesHero authors={authors} />\n      <Section narrow>\n        <ArticlesList articles={articles} authors={authors}/>\n        <ArticlesPaginator show={pageContext.pageCount > 1}>\n          <Paginator {...pageContext} />\n        </ArticlesPaginator>\n      </Section>\n      <ArticlesGradient />\n    </Layout>\n  );\n};\n\nexport default ArticlesPage;\n\nconst ArticlesGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${p => p.theme.colors.gradient};\n  transition: ${p => p.theme.colorModeTransition};\n`;\n\nconst ArticlesPaginator = styled.div<{ show: boolean }>`\n  ${p => p.show && `margin-top: 95px;`}\n`;\n"],"sourceRoot":""}