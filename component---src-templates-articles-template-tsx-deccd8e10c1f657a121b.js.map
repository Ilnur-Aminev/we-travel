{"version":3,"sources":["webpack:///./src/components/Regions/Regions.tsx","webpack:///./src/sections/articles/Articles.Hero.tsx","webpack:///./src/templates/articles.template.tsx"],"names":["Regions","authors","Wrapper","map","a","AuthorLink","color","key","name","to","slug","SightName","mediaqueries","phablet","ArticlesHero","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","hero","useStaticQuery","site","edges","node","siteMetadata","tilesIsActive","Section","relative","id","HeadingContainer","style","maxWidth","HeroHeading","dangerouslySetInnerHTML","__html","heading","SubheadingContainer","GridControlsContainer","GridButton","onClick","active","data-a11y","title","aria-label","Tiles","Rows","desktop","tablet","p","theme","colors","primary","accent","phone","hover","ArticlesPage","location","pageContext","siteUrl","allSite","articles","group","additionalContext","Layout","SEO","pathname","narrow","showAuthorInfo","ArticlesPaginator","show","pageCount","ArticlesGradient","gradient","colorModeTransition"],"mappings":"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","file":"component---src-templates-articles-template-tsx-deccd8e10c1f657a121b.js","sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport mediaqueries from '../../styles/media';\nimport { IAuthor } from '../../types';\nimport { SightName } from '../Common/Common';\n\nexport const Regions: React.FC<{ authors: IAuthor[] }> = ({ authors }) => {\n  return (\n    <Wrapper>\n      {authors.map(a => (\n          <AuthorLink color={a.color} key={a.name}>\n            <Link to={a.slug} key={a.name}>\n              {a.name}\n            </Link>\n          </AuthorLink>\n      ))}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst AuthorLink = styled(SightName)`\n  font-size: 24px;\n  font-weight: 700 !important;\n  margin-right: 15px;\n  padding-right: 15px;\n\n  &&&:after {\n    top: 16px;\n  }\n\n  ${mediaqueries.phablet`\n    font-size: 18px;\n    &&&:after {\n      top: 12px;\n    }\n  `}\n`;\n","import React, { useContext } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Section from '../../components/Section';\nimport Icons from '../../icons/index';\nimport mediaqueries from '../../styles/media';\nimport { IAuthor } from '../../types';\n\nimport { GridLayoutContext } from './Articles.List.Context';\nimport { Regions } from '../../components/Regions';\n\nconst authorQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArticlesHero: React.FC<{ authors: IAuthor[] }> = ({ authors }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(GridLayoutContext);\n\n  const results = useStaticQuery(authorQuery);\n  const hero = results.site.edges[0].node.siteMetadata.hero;\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n\n  return (\n    <Section relative id=\"Articles__Hero\">\n      <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\n        <HeroHeading dangerouslySetInnerHTML={{ __html: hero.heading }} />\n      </HeadingContainer>\n      <SubheadingContainer>\n        <Regions authors={authors} />\n        <GridControlsContainer>\n          <GridButton\n            onClick={() => setGridLayout('tiles')}\n            active={tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Tile grid\"\n            aria-label=\"Show articles in Tile grid\"\n          >\n            <Icons.Tiles />\n          </GridButton>\n          <GridButton\n            onClick={() => setGridLayout('rows')}\n            active={!tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Row grid\"\n            aria-label=\"Show articles in Row grid\"\n          >\n            <Icons.Rows />\n          </GridButton>\n        </GridControlsContainer>\n      </SubheadingContainer>\n    </Section>\n  );\n};\n\nexport default ArticlesHero;\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    margin-bottom: 30px;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  margin: 100px 0;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n    margin: 35px 0 30px;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 800;\n  font-size: 64px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 36px;\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 24px;\n  `}\n\n  ${mediaqueries.phone`\n    font-size: 20px;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.primary};\n    }\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Section from '../components/Section';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout';\nimport { Paginator } from '../components/Navigation/Navigation.Paginator';\n\nimport mediaqueries from '../styles/media';\nimport ArticlesHero from '../sections/articles/Articles.Hero';\nimport { ArticlesList } from '../sections/articles/Articles.List';\nimport { ArticlesTemplate } from '../types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nconst query = graphql`\n  {\n    allSite {\n      edges {\n        node {\n          siteMetadata {\n            siteUrl\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArticlesPage: ArticlesTemplate = ({ location, pageContext }) => {\n  const results = useStaticQuery(query);\n  const { siteUrl } = results.allSite.edges[0].node.siteMetadata;\n  const articles = pageContext.group;\n  const authors = pageContext.additionalContext.authors;\n\n  return (\n    <Layout>\n      <SEO pathname={location.pathname} />\n      <ArticlesHero authors={authors} />\n      <Section narrow>\n        <ArticlesList articles={articles} authors={authors} showAuthorInfo/>\n        <ArticlesPaginator show={pageContext.pageCount > 1}>\n          <Paginator {...pageContext} siteUrl={siteUrl} />\n        </ArticlesPaginator>\n      </Section>\n      <ArticlesGradient />\n    </Layout>\n  );\n};\n\nexport default ArticlesPage;\n\nconst ArticlesGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${p => p.theme.colors.gradient};\n  transition: ${p => p.theme.colorModeTransition};\n`;\n\nconst ArticlesPaginator = styled.div<{ show: boolean }>`\n  ${p => p.show && `margin-top: 90px;`}\n\n  ${p =>\n    p.show &&\n    mediaqueries.tablet`\n    margin-top: 16px;\n  `}\n`;\n"],"sourceRoot":""}