{"version":3,"sources":["webpack:///./src/components/Regions/Regions.tsx","webpack:///./src/sections/articles/Articles.Hero.tsx","webpack:///./src/sections/articles/Articles.List.tsx","webpack:///./src/assets/hero.svg","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/components/Common/Common.tsx"],"names":["Regions","authors","useMediaQuery","query","DesctopWrapper","map","a","RegionLink","to","slug","key","name","ImageWrapper","Image","src","avatar","large","style","height","Title","title","Subtitle","country","Wrapper","AuthorLink","color","Headings","h3","p","theme","fonts","sansSerif","mediaqueries","tablet","narrow","Link","colors","accent","SightName","phablet","ArticlesHero","HeroImg","Section","id","RegionsContainer","SectionHeader","heroImg","primary","serif","desktop","phone","ArticlesList","articles","alwaysShowAllDetails","showAuthorInfo","header","hasOnlyOneArticle","length","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","getGridLayout","setGridLayout","articlePairs","reduce","result","value","index","array","push","slice","useEffect","tilesIsActive","ListWrapper","HeroGridContainer","GridControlsContainer","GridButton","onClick","active","data-a11y","aria-label","Tiles","Rows","ArticlesListContainer","opacity","ap","isEven","isOdd","List","reverse","ListItem","article","hasOverflow","imageSource","hero","regular","hasHeroImage","Object","keys","constructor","author","ArticleLink","Item","ImageContainer","CardContent","dark","Excerpt","excerpt","MetaData","type","limitToTwoLines","css","showDetails","listTile","wide","desktop_medium","listItemRow","card","listItemTile","listRow","grey","hover","module","exports","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","defineProperty","_createClass","Constructor","protoProps","staticProps","prototype","AdditionalInfo","getSightColor"],"mappings":"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","file":"3541999bebca49a138dd8d6d9387400ee625322e-601bd3f74998f4681431.js","sourcesContent":["import styled from '@emotion/styled'\nimport { Link } from 'gatsby';\nimport React from 'react';\nimport mediaqueries from '../../styles/media';\nimport { IAuthor } from '../../types';\nimport { SightName } from '../Common/Common';\nimport { useMediaQuery } from 'react-responsive';\nimport Image from '../../components/Image';\nimport Headings from '../Headings';\n\nexport const Regions: React.FC<{ authors: IAuthor[] }> = ({ authors }) => {\n  const isDesktop = useMediaQuery({\n    query: '(min-device-width: 1070px)'\n  });\n\n  if (isDesktop) {\n    return (\n      <DesctopWrapper>\n        {authors.map(a => (\n          <RegionLink to={a.slug} key={a.name}>\n            <ImageWrapper>\n              <Image src={a.avatar.large} style={{ height: '200px' }} />\n            </ImageWrapper>\n            <Title title={a.name}>{a.name}</Title>\n            <Subtitle>{a.country}</Subtitle>\n          </RegionLink>\n        ))}\n      </DesctopWrapper>\n    );\n  }\n\n  return (\n    <Wrapper>\n      {authors.map(a => (\n        <AuthorLink color={a.color} key={a.name}>\n          <Link to={a.slug} key={a.name}>\n            {a.name}\n          </Link>\n        </AuthorLink>\n      ))}\n    </Wrapper>\n  );\n};\n\nconst Title = styled(Headings.h3)`\n  font-family: ${p => p.theme.fonts.sansSerif};\n  text-align: center;\n  font-size: 22px;\n\n  ${mediaqueries.tablet`\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  `}\n`;\n\nconst Subtitle = styled.div`\n  font-size: 14px;\n  color: #7d7d7d;\n  text-align: center;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst DesctopWrapper = styled(Wrapper)`\n  margin: 30px -10px 0;\n`;\n\nconst ImageWrapper = styled.div`\n  margin-bottom: 16px;\n  transition: transform 0.3s var(--ease-out-quad), box-shadow 0.3s var(--ease-out-quad);\n  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)}),\n    0 18px 36px -18px rgba(0, 0, 0, ${p => (p.narrow ? 0.25 : 0.33)});\n`;\n\nexport const RegionLink = styled(Link)`\n  width: calc(25% - 20px);\n  margin: 10px;\n  height: 270px;\n\n  &:hover,\n  &:focus {\n    ${ImageWrapper} {\n      transform: translateY(-1px);\n      box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27), 0 30px 50px -30px rgba(0, 0, 0, 0.3);\n    }\n    h3 {\n      color: ${p => p.theme.colors.accent};\n    }\n  }\n\n  ${mediaqueries.tablet`\n    width: calc(50% - 20px);\n  `}\n`;\n\nconst AuthorLink = styled(SightName)`\n  font-size: 24px;\n  font-weight: 700 !important;\n  margin-right: 15px;\n  padding-right: 15px;\n\n  &&&:after {\n    top: 16px;\n  }\n\n  ${mediaqueries.phablet`\n    font-size: 18px;\n    &&&:after {\n      top: 12px;\n    }\n  `}\n`;\n","import React from 'react';\nimport styled from '@emotion/styled'\nimport Section from '../../components/Section';\nimport mediaqueries from '../../styles/media';\nimport { IAuthor } from '../../types';\nimport heroImg from '../../assets/hero.svg';\n\nimport { Regions } from '../../components/Regions';\n\nconst ArticlesHero: React.FC<{ authors: IAuthor[] }> = ({ authors }) => {\n  return (\n    <>\n      <HeroImg />\n      <Section id=\"Articles__Hero\">\n        <RegionsContainer>\n          <SectionHeader>Регионы</SectionHeader>\n          <Regions authors={authors} />\n        </RegionsContainer>\n      </Section>\n    </>\n  );\n};\n\nexport default ArticlesHero;\n\nconst HeroImg = styled.section`\n  width: 100%;\n  background: url(${heroImg});\n  height: 400px;\n  background-size: cover;\n\n  ${mediaqueries.phablet`\n    height: 200px;\n    margin: 20px 0;\n    background-position-x: 70%;\n  `};\n`;\n\nconst RegionsContainer = styled.div`\n  margin: 70px 0 40px;\n\n  ${mediaqueries.tablet`\n    margin: 35px 0 30px;\n  `}\n`;\n\nexport const SectionHeader = styled.h2`\n  font-style: normal;\n  font-weight: 800;\n  font-size: 48px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n  font-family: ${p => p.theme.fonts.serif};\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 36px;\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 24px;\n  `}\n\n  ${mediaqueries.phone`\n    font-size: 20px;\n  `}\n`;\n","import React, { useContext, useEffect } from 'react';\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\n\nimport Headings from '../../components/Headings';\nimport Image, { ImagePlaceholder } from '../../components/Image';\n\nimport mediaqueries from '../../styles/media';\nimport { IArticle } from '../../types';\n\nimport { GridLayoutContext } from './Articles.List.Context';\nimport { AdditionalInfo, SightName } from '../../components/Common/Common';\nimport { SectionHeader } from './Articles.Hero';\nimport Icons from '@icons';\n\n/**\n * Tiles\n * [LONG], [SHORT]\n * [SHORT], [LONG]\n * [SHORT], [LONG]\n *\n * or ------------\n *\n * Rows\n * [LONG]\n * [LONG]\n * [LONG]\n */\n\ninterface ArticlesListProps {\n  articles: IArticle[];\n  showAuthorInfo?: boolean;\n  alwaysShowAllDetails?: boolean;\n  header?: string;\n}\n\ninterface ArticlesListItemProps {\n  article: IArticle;\n  showAuthorInfo?: boolean;\n  narrow?: boolean;\n}\n\nexport const ArticlesList: React.FC<ArticlesListProps> = ({\n  articles,\n  alwaysShowAllDetails,\n  showAuthorInfo,\n  header\n}) => {\n  if (!articles) return null;\n\n  const hasOnlyOneArticle = articles.length === 1;\n  const { gridLayout = 'tiles', hasSetGridLayout, getGridLayout, setGridLayout } = useContext(GridLayoutContext);\n\n  /**\n   * We're taking the flat array of articles [{}, {}, {}...]\n   * and turning it into an array of pairs of articles [[{}, {}], [{}, {}], [{}, {}]...]\n   * This makes it simpler to create the grid we want\n   */\n  const articlePairs = articles.reduce((result, value, index, array) => {\n    if (index % 2 === 0) {\n      result.push(array.slice(index, index + 2));\n    }\n    return result;\n  }, []);\n\n  useEffect(() => getGridLayout(), []);\n\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n\n  return (\n    <ListWrapper id=\"articles\">\n      {header && (\n        <HeroGridContainer>\n          <SectionHeader>{header}</SectionHeader>\n          <GridControlsContainer>\n            <GridButton\n              onClick={() => setGridLayout('tiles')}\n              active={tilesIsActive}\n              data-a11y=\"false\"\n              title=\"Show articles in Tile grid\"\n              aria-label=\"Show articles in Tile grid\"\n            >\n              <Icons.Tiles />\n            </GridButton>\n            <GridButton\n              onClick={() => setGridLayout('rows')}\n              active={!tilesIsActive}\n              data-a11y=\"false\"\n              title=\"Show articles in Row grid\"\n              aria-label=\"Show articles in Row grid\"\n            >\n              <Icons.Rows />\n            </GridButton>\n          </GridControlsContainer>\n        </HeroGridContainer>\n      )}\n      <ArticlesListContainer style={{ opacity: hasSetGridLayout ? 1 : 0 }} alwaysShowAllDetails={alwaysShowAllDetails}>\n        {articlePairs.map((ap, index) => {\n          const isEven = index % 2 !== 0;\n          const isOdd = index % 2 !== 1;\n\n          return (\n            <List key={index} gridLayout={gridLayout} hasOnlyOneArticle={hasOnlyOneArticle} reverse={isEven}>\n              <ListItem article={ap[0]} narrow={isEven} showAuthorInfo={showAuthorInfo} />\n              <ListItem article={ap[1]} narrow={isOdd} showAuthorInfo={showAuthorInfo} />\n            </List>\n          );\n        })}\n      </ArticlesListContainer>\n    </ListWrapper>\n  );\n};\n\nconst ListItem: React.FC<ArticlesListItemProps> = ({ article, narrow, showAuthorInfo }) => {\n  if (!article) return null;\n\n  const { gridLayout } = useContext(GridLayoutContext);\n  const hasOverflow = narrow && article.title.length > 35;\n  const imageSource = narrow ? article.hero.narrow : article.hero.regular;\n  const hasHeroImage = imageSource && Object.keys(imageSource).length !== 0 && imageSource.constructor === Object;\n  const { name, color, country } = article.author;\n  return (\n    <ArticleLink to={article.slug} data-a11y=\"false\">\n      <Item gridLayout={gridLayout}>\n        <ImageContainer narrow={narrow} gridLayout={gridLayout}>\n          {hasHeroImage ? <Image src={imageSource} /> : <ImagePlaceholder />}\n        </ImageContainer>\n        <CardContent>\n          <Title dark hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {article.title}\n          </Title>\n          <Excerpt narrow={narrow} hasOverflow={hasOverflow} gridLayout={gridLayout} title={article.excerpt}>\n            {article.excerpt}\n          </Excerpt>\n          <MetaData>\n            {showAuthorInfo && (\n              <>\n                <SightName color={color}>{name}</SightName>\n                <AdditionalInfo>{country}</AdditionalInfo>\n              </>\n            )}\n            <AdditionalInfo>{article.type}</AdditionalInfo>\n          </MetaData>\n        </CardContent>\n      </Item>\n    </ArticleLink>\n  );\n};\n\nconst wide = '1fr';\nconst narrow = '457px';\n\nconst ListWrapper = styled.div`\n  padding-top: 30px;\n`;\n\nexport const limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n  ${mediaqueries.phablet`\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst showDetails = css`\n  p {\n    display: -webkit-box;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n`;\n\nconst ArticlesListContainer = styled.div<{ alwaysShowAllDetails?: boolean }>`\n  transition: opacity 0.25s;\n  ${p => p.alwaysShowAllDetails && showDetails}\n`;\n\nconst listTile = p => css`\n  position: relative;\n  display: grid;\n  grid-template-columns: ${p.reverse ? `${narrow} ${wide}` : `${wide} ${narrow}`};\n  grid-template-rows: 2;\n  column-gap: 30px;\n\n  &:not(:last-child) {\n    margin-bottom: 55px;\n  }\n\n  ${mediaqueries.desktop_medium`\n    grid-template-columns: 1fr 1fr;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n    \n    &:not(:last-child) {\n      margin-bottom: 0;\n    }\n  `}\n`;\n\nconst listItemRow = p => css`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-template-columns: 1fr 488px;\n  grid-column-gap: 96px;\n  grid-template-rows: 1;\n  align-items: center;\n  position: relative;\n  margin-bottom: 50px;\n\n  ${mediaqueries.desktop`\n    grid-column-gap: 24px;\n    grid-template-columns: 1fr 380px;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\nconst listItemTile = p => css`\n  position: relative;\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    margin-bottom: 40px;\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\n// If only 1 article, dont create 2 rows.\nconst listRow = p => css`\n  display: grid;\n  grid-template-rows: ${p.hasOnlyOneArticle ? '1fr' : '1fr 1fr'};\n`;\n\nconst List = styled.div<{\n  reverse: boolean;\n  gridLayout: string;\n  hasOnlyOneArticle: boolean;\n}>`\n  ${p => (p.gridLayout === 'tiles' ? listTile : listRow)}\n`;\n\nconst Item = styled.div<{ gridLayout: string }>`\n  ${p => (p.gridLayout === 'rows' ? listItemRow : listItemTile)}\n`;\n\nconst ImageContainer = styled.div<{ narrow: boolean; gridLayout: string }>`\n  position: relative;\n  height: ${p => (p.gridLayout === 'tiles' ? '280px' : '220px')};\n  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)}),\n    0 18px 36px -18px rgba(0, 0, 0, ${p => (p.narrow ? 0.25 : 0.33)});\n  margin-bottom: ${p => (p.gridLayout === 'tiles' ? '30px' : 0)};\n  transition: transform 0.3s var(--ease-out-quad), box-shadow 0.3s var(--ease-out-quad);\n\n  & > div {\n    height: 100%;\n  }\n\n  ${mediaqueries.tablet`\n    height: 200px;\n    margin-bottom: 35px;\n  `}\n\n  ${mediaqueries.phablet`\n    overflow: hidden;\n    margin-bottom: 0;\n    box-shadow: none;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n  `}\n`;\n\nexport const Title = styled(Headings.h3)`\n  font-size: 21px;\n  font-family: ${p => p.theme.fonts.serif};\n  margin-bottom: 10px;\n  transition: color 0.3s ease-in-out;\n  ${limitToTwoLines};\n\n  ${mediaqueries.desktop`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.tablet`\n    font-size: 24px;  \n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 22px;  \n    padding: 0;\n    margin-bottom: 8px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst Excerpt = styled.p<{\n  hasOverflow: boolean;\n  narrow: boolean;\n  gridLayout: string;\n}>`\n  ${limitToTwoLines};\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: ${p => p.theme.colors.grey};\n  display: box;\n  -webkit-line-clamp: ${p => (p.hasOverflow && p.gridLayout === 'tiles' ? '1' : '2')};\n  max-width: ${p => (p.narrow ? '415px' : '515px')};\n\n  ${mediaqueries.desktop`\n    display: -webkit-box;\n  `}\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    margin-bottom: 16px;\n    padding: 0;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst MetaData = styled.div`\n  display: inline-flex;\n  align-items: center;\n  flex-wrap: wrap;\n  font-weight: 600;\n  font-size: 16px;\n  color: #000;\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding: 0;\n  `}\n`;\n\nconst ArticleLink = styled(Link)`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  border-radius: 5px;\n  z-index: 1;\n  transition: transform 0.33s var(--ease-out-quart);\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n\n  &:hover ${ImageContainer}, &:focus ${ImageContainer} {\n    transform: translateY(-1px);\n    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27), 0 30px 50px -30px rgba(0, 0, 0, 0.3);\n  }\n\n  &:hover h3,\n  &:focus h3 {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -1.5%;\n    top: -2%;\n    width: 103%;\n    height: 104%;\n    border: 3px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 5px;\n  }\n\n  ${mediaqueries.phablet`\n    &:hover ${ImageContainer} {\n      transform: none;\n      box-shadow: initial;\n    }\n\n    &:active {\n      transform: scale(0.97) translateY(3px);\n    }\n  `}\n`;\n\nconst CardContent = styled.div`\n  ${mediaqueries.phablet`\n    padding: 16px;\n  `}\n`;\n\nconst HeroGridContainer = styled.div`\n  display: flex;\n  align-items: space-between;\n  margin-bottom: 50px;\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    margin-bottom: 30px;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.primary};\n    }\n  }\n`;\n","module.exports = __webpack_public_path__ + \"static/hero-e249d8b94ce4c206fb948178b8f1df41.svg\";","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import styled from '@emotion/styled'\nimport { getSightColor } from '../../helpers/helpers';\nimport mediaqueries from '../../styles/media';\nimport { SightColor } from '../../types';\n\nexport const AdditionalInfo = styled.span`\n  display: inline-block;\n  color: #dadada;\n  position: relative;\n  margin-right: 10px;\n  padding-right: 12px;\n\n  &:not(:last-child):after {\n    position: absolute;\n    top: 10px;\n    right: 0;\n    content: '';\n    display: block;\n    width: 3px;\n    height: 3px;\n    border-radius: 3px;\n    background: #dadada;\n  }\n\n  ${mediaqueries.phablet`\n    font-weight: 500;\n  `}\n`;\n\nexport const SightName = styled(AdditionalInfo)<{ color?: string }>`\n  color: ${props => (props.color ? getSightColor(props.color as SightColor) : '#000')};\n  & > * {\n    color: ${props => (props.color ? getSightColor(props.color as SightColor) : '#000')};\n  }\n`;\n"],"sourceRoot":""}